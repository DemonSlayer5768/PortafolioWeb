---
import ThemeToggle from "@components/ThemeToogle.astro";
import { IoMenu } from "react-icons/io5";

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/#home",
  },
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experence",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyects",
  },
  {
    title: "Habilidades",
    label: "habilidades",
    url: "/#skills",
  },
  {
    title: "Sobre mí",
    label: "sobre-mi",
    url: "/#aboutMe",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:jjaimeloza5768@gmail.com",
  },
];

// class="flex px-3 text-sm font-medium rounded-full text-gray-800 dark:text-gray-200 justify-center items-center"
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
  <nav
    id="nav-menu"
    class="hidden px-3 text-sm font-medium rounded-full text-gray-800 dark:text-gray-200 justify-center items-center
    md:flex flex-col md:flex-row md:items-right absolute md:relative top-16 md:top-0 right-0 w-full md:w-auto bg-white"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>

  <!-- Botón de menú hamburguesa en móviles -->
  <button
    id="menu-toggle"
    class="md:hidden p-2 text-gray-800 dark:text-gray-200 ml-auto"
  >
    <IoMenu size={30} />
  </button>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const menuToggle = document.getElementById("menu-toggle");
    const navMenu = document.getElementById("nav-menu");

    if (menuToggle && navMenu) {
      menuToggle.addEventListener("click", () => {
        navMenu.classList.toggle("hidden");
      });
    }
  });

  // Resaltado de navegación
  const sections = document.querySelectorAll("section");
  const navItems = document.querySelectorAll("header nav a");

  const callback = (entries: IntersectionObserverEntry[]) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        navItems.forEach((item) => {
          if (item.getAttribute("aria-label") === entry.target.id) {
            item.classList.add("text-blue-500");
          } else {
            item.classList.remove("text-blue-500");
          }
        });
      }
    });
  };

  const observer = new IntersectionObserver(callback, {
    root: null,
    rootMargin: "0px",
    threshold: 0.3,
  });

  sections.forEach((section) => {
    observer.observe(section);
  });

  // Cleanup function
  document.onvisibilitychange = () => {
    if (document.visibilityState === "hidden") {
      observer.disconnect();
    } else {
      sections.forEach((section) => {
        observer.observe(section);
      });
    }
  };
</script>

<style>
  nav {
    animation: nav-shadow 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
    background-color: rgba(255, 255, 255, 0.5); /* Fondo transparente */
  }

  @media (max-width: 768px) {
    #nav-menu {
      transition: all 0.3s ease-in-out;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1); /* Añadir sombra suave */
      backdrop-filter: blur(8px); /* Aplicar desenfoque al fondo */
      border-radius: 10px; /* Bordes redondeados para un estilo más amigable en móviles */
      padding: 1rem; /* Ajustar padding para móviles */
    }

    /* Opcional: Alineación del contenido para móviles */
    #nav-menu {
      text-align: end;
      flex-direction: column; /* Alinear los elementos en columna */
      align-items: end; /* Centrar los elementos */
      transition: all 0.3s ease-in-out;
    }
  }

  @keyframes nav-shadow {
    0% {
      background-color: rgba(
        255,
        255,
        255,
        0
      ); /* Fondo transparente al inicio */
      box-shadow: none; /* Sin sombra al inicio */
    }
    100% {
      background-color: hsla(
        229,
        33%,
        52%,
        0.74
      ); /* Fondo con transparencia al final */
      box-shadow: 0 10px 20px rgba(255, 255, 255, 0.1); /* Añadir sombra al final */
      backdrop-filter: blur(10px); /* Desenfoque de fondo */
    }
  }
</style>
